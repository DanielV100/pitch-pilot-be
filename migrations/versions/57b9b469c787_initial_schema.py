"""initial schema

Revision ID: 57b9b469c787
Revises: 
Create Date: 2025-06-19 22:46:06.506706

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '57b9b469c787'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password_hash', sa.String(length=128), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('presentations',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('tags', postgresql.ARRAY(sa.String()), nullable=False),
    sa.Column('file_url', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('presentation_findings',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('presentation_id', sa.UUID(), nullable=False),
    sa.Column('findings', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('total_score', sa.Float(), nullable=False),
    sa.Column('cockpit_score', sa.Float(), nullable=True),
    sa.Column('flight_path_score', sa.Float(), nullable=True),
    sa.Column('altitude_score', sa.Float(), nullable=True),
    sa.Column('preflight_check_score', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['presentation_id'], ['presentations.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('trainings',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('presentation_id', sa.UUID(), nullable=False),
    sa.Column('total_score', sa.Float(), nullable=False),
    sa.Column('date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('duration_seconds', sa.Integer(), nullable=True, comment='Total session time in seconds'),
    sa.Column('visibility_mode', sa.Enum('solo', 'private', name='visibility_mode'), nullable=True),
    sa.Column('difficulty', sa.Enum('easy', 'medium', 'hard', name='difficulty_level'), nullable=True),
    sa.Column('eye_calibration', postgresql.JSONB(astext_type=sa.Text()), nullable=True, comment='Raw calibration JSON from frontend'),
    sa.ForeignKeyConstraint(['presentation_id'], ['presentations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('trainings')
    op.drop_table('presentation_findings')
    op.drop_table('presentations')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
